start: 1631
end: 2031
indent: '  '
context: '[tsteps, n] -> {  : -2147483648 <= tsteps <= 2147483647 and -2147483648
  <= n <= 2147483647 and (tsteps <= 0 or (tsteps > 0 and n >= -2147483647)) }'
schedule: '{ domain: "[tsteps, n] -> { S_1[t] : 0 <= t < tsteps; S_10[t, i] : 0 <=
  t < tsteps and 0 < i <= -2 + n; S_6[t] : 0 <= t < tsteps; S_2[t, i] : 0 <= t < tsteps
  and 0 < i <= -2 + n; S1[t, i, j] : 0 <= t < tsteps and 0 < i <= -2 + n and 0 < j
  <= -2 + n; S_0[]; S2[t, i, j] : 0 <= t < tsteps and 0 < i <= -2 + n and 0 < j <=
  -2 + n; S_9[t, i, j] : 0 <= t < tsteps and 0 < i <= -2 + n and 0 < j <= -2 + n;
  S_14[]; S_12[]; S_4[t, i, j] : 0 <= t < tsteps and 0 < i <= -2 + n and 0 < j <=
  -2 + n; S_5[t, i] : 0 <= t < tsteps and 0 < i <= -2 + n; S_7[t, i] : 0 <= t < tsteps
  and 0 < i <= -2 + n; S_11[t] : 0 <= t < tsteps; S_13[] }", child: { sequence: [
  { filter: "[tsteps, n] -> { S_0[] }" }, { filter: "[tsteps, n] -> { S_1[t]; S_10[t,
  i]; S_6[t]; S_2[t, i]; S1[t, i, j]; S2[t, i, j]; S_9[t, i, j]; S_4[t, i, j]; S_5[t,
  i]; S_7[t, i]; S_11[t] }", child: { schedule: "[tsteps, n] -> L_0[{ S_1[t] -> [(t)];
  S_10[t, i] -> [(t)]; S_6[t] -> [(t)]; S_2[t, i] -> [(t)]; S1[t, i, j] -> [(t)];
  S2[t, i, j] -> [(t)]; S_9[t, i, j] -> [(t)]; S_4[t, i, j] -> [(t)]; S_5[t, i] ->
  [(t)]; S_7[t, i] -> [(t)]; S_11[t] -> [(t)] }]", child: { sequence: [ { filter:
  "[tsteps, n] -> { S_1[t] }" }, { filter: "[tsteps, n] -> { S_2[t, i]; S1[t, i, j];
  S_4[t, i, j]; S_5[t, i] }", child: { schedule: "[tsteps, n] -> L_1[{ S_2[t, i] ->
  [(i)]; S1[t, i, j] -> [(i)]; S_4[t, i, j] -> [(i)]; S_5[t, i] -> [(i)] }]", child:
  { sequence: [ { filter: "[tsteps, n] -> { S_2[t, i] }" }, { filter: "[tsteps, n]
  -> { S1[t, i, j]; S_4[t, i, j] }", child: { schedule: "[tsteps, n] -> L_2[{ S1[t,
  i, j] -> [(j)]; S_4[t, i, j] -> [(j)] }]", child: { sequence: [ { filter: "[tsteps,
  n] -> { S1[t, i, j] }" }, { filter: "[tsteps, n] -> { S_4[t, i, j] }" } ] } } },
  { filter: "[tsteps, n] -> { S_5[t, i] }" } ] } } }, { filter: "[tsteps, n] -> {
  S_6[t] }" }, { filter: "[tsteps, n] -> { S_10[t, i]; S2[t, i, j]; S_9[t, i, j];
  S_7[t, i] }", child: { schedule: "[tsteps, n] -> L_3[{ S_10[t, i] -> [(i)]; S2[t,
  i, j] -> [(i)]; S_9[t, i, j] -> [(i)]; S_7[t, i] -> [(i)] }]", child: { sequence:
  [ { filter: "[tsteps, n] -> { S_7[t, i] }" }, { filter: "[tsteps, n] -> { S2[t,
  i, j]; S_9[t, i, j] }", child: { schedule: "[tsteps, n] -> L_4[{ S2[t, i, j] ->
  [(j)]; S_9[t, i, j] -> [(j)] }]", child: { sequence: [ { filter: "[tsteps, n] ->
  { S2[t, i, j] }" }, { filter: "[tsteps, n] -> { S_9[t, i, j] }" } ] } } }, { filter:
  "[tsteps, n] -> { S_10[t, i] }" } ] } } }, { filter: "[tsteps, n] -> { S_11[t] }"
  } ] } } }, { filter: "[tsteps, n] -> { S_14[]; S_12[]; S_13[] }", child: { set:
  [ { filter: "{ S_12[] }" }, { filter: "{ S_13[] }" }, { filter: "{ S_14[] }" } ]
  } } ] } }'
arrays:
- context: '{  :  }'
  extent: '[tsteps, n] -> { A[i0, i1] : i0 >= 0 and 0 <= i1 <= 1299 }'
  element_type: double
  element_size: 8
- context: '{  :  }'
  extent: '[tsteps, n] -> { B[i0, i1] : i0 >= 0 and 0 <= i1 <= 1299 }'
  element_type: double
  element_size: 8
- context: '{  :  }'
  extent: '{ i[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ j[] }'
  element_type: int
  element_size: 4
- context: '{  :  }'
  extent: '{ t[] }'
  element_type: int
  element_size: 4
statements:
- line: 77
  domain: '{ S_0[] }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_0[] -> t[] }'
        reference: __pet_ref_0
        read: 0
        write: 1
      - type: int
        value: 0
- line: 79
  domain: '[tsteps, n] -> { S_1[t] : 0 <= t < tsteps }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_1[t] -> i[] }'
        reference: __pet_ref_1
        read: 0
        write: 1
      - type: int
        value: 1
- line: 80
  domain: '[tsteps, n] -> { S_2[t, i] : 0 <= t < tsteps and 0 < i <= -2 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_2[t, i] -> j[] }'
        reference: __pet_ref_2
        read: 0
        write: 1
      - type: int
        value: 1
- line: 81
  domain: '[tsteps, n] -> { S1[t, i, j] : 0 <= t < tsteps and 0 < i <= -2 + n and
    0 < j <= -2 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S1[t, i, j] -> B[(i), (j)] }'
        reference: __pet_ref_3
        read: 0
        write: 1
      - type: op
        operation: '*'
        arguments:
        - type: double
          value: 0.2
          string: 0.20000000000000001
        - type: op
          operation: +
          arguments:
          - type: op
            operation: +
            arguments:
            - type: op
              operation: +
              arguments:
              - type: op
                operation: +
                arguments:
                - type: access
                  index: '[tsteps, n] -> { S1[t, i, j] -> A[(i), (j)] }'
                  reference: __pet_ref_4
                  read: 1
                  write: 0
                - type: access
                  index: '[tsteps, n] -> { S1[t, i, j] -> A[(i), (-1 + j)] }'
                  reference: __pet_ref_5
                  read: 1
                  write: 0
              - type: access
                index: '[tsteps, n] -> { S1[t, i, j] -> A[(i), (1 + j)] }'
                reference: __pet_ref_6
                read: 1
                write: 0
            - type: access
              index: '[tsteps, n] -> { S1[t, i, j] -> A[(1 + i), (j)] }'
              reference: __pet_ref_7
              read: 1
              write: 0
          - type: access
            index: '[tsteps, n] -> { S1[t, i, j] -> A[(-1 + i), (j)] }'
            reference: __pet_ref_8
            read: 1
            write: 0
- line: 80
  domain: '[tsteps, n] -> { S_4[t, i, j] : 0 <= t < tsteps and 0 < i <= -2 + n and
    0 < j <= -2 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_4[t, i, j] -> j[] }'
        reference: __pet_ref_9
        read: 0
        write: 1
      - type: access
        index: '[tsteps, n] -> { S_4[t, i, j] -> [(1 + j)] }'
        reference: __pet_ref_10
        read: 1
        write: 0
- line: 79
  domain: '[tsteps, n] -> { S_5[t, i] : 0 <= t < tsteps and 0 < i <= -2 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_5[t, i] -> i[] }'
        reference: __pet_ref_11
        read: 0
        write: 1
      - type: access
        index: '[tsteps, n] -> { S_5[t, i] -> [(1 + i)] }'
        reference: __pet_ref_12
        read: 1
        write: 0
- line: 82
  domain: '[tsteps, n] -> { S_6[t] : 0 <= t < tsteps }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_6[t] -> i[] }'
        reference: __pet_ref_13
        read: 0
        write: 1
      - type: int
        value: 1
- line: 83
  domain: '[tsteps, n] -> { S_7[t, i] : 0 <= t < tsteps and 0 < i <= -2 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_7[t, i] -> j[] }'
        reference: __pet_ref_14
        read: 0
        write: 1
      - type: int
        value: 1
- line: 84
  domain: '[tsteps, n] -> { S2[t, i, j] : 0 <= t < tsteps and 0 < i <= -2 + n and
    0 < j <= -2 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S2[t, i, j] -> A[(i), (j)] }'
        reference: __pet_ref_15
        read: 0
        write: 1
      - type: op
        operation: '*'
        arguments:
        - type: double
          value: 0.2
          string: 0.20000000000000001
        - type: op
          operation: +
          arguments:
          - type: op
            operation: +
            arguments:
            - type: op
              operation: +
              arguments:
              - type: op
                operation: +
                arguments:
                - type: access
                  index: '[tsteps, n] -> { S2[t, i, j] -> B[(i), (j)] }'
                  reference: __pet_ref_16
                  read: 1
                  write: 0
                - type: access
                  index: '[tsteps, n] -> { S2[t, i, j] -> B[(i), (-1 + j)] }'
                  reference: __pet_ref_17
                  read: 1
                  write: 0
              - type: access
                index: '[tsteps, n] -> { S2[t, i, j] -> B[(i), (1 + j)] }'
                reference: __pet_ref_18
                read: 1
                write: 0
            - type: access
              index: '[tsteps, n] -> { S2[t, i, j] -> B[(1 + i), (j)] }'
              reference: __pet_ref_19
              read: 1
              write: 0
          - type: access
            index: '[tsteps, n] -> { S2[t, i, j] -> B[(-1 + i), (j)] }'
            reference: __pet_ref_20
            read: 1
            write: 0
- line: 83
  domain: '[tsteps, n] -> { S_9[t, i, j] : 0 <= t < tsteps and 0 < i <= -2 + n and
    0 < j <= -2 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_9[t, i, j] -> j[] }'
        reference: __pet_ref_21
        read: 0
        write: 1
      - type: access
        index: '[tsteps, n] -> { S_9[t, i, j] -> [(1 + j)] }'
        reference: __pet_ref_22
        read: 1
        write: 0
- line: 82
  domain: '[tsteps, n] -> { S_10[t, i] : 0 <= t < tsteps and 0 < i <= -2 + n }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_10[t, i] -> i[] }'
        reference: __pet_ref_23
        read: 0
        write: 1
      - type: access
        index: '[tsteps, n] -> { S_10[t, i] -> [(1 + i)] }'
        reference: __pet_ref_24
        read: 1
        write: 0
- line: 77
  domain: '[tsteps, n] -> { S_11[t] : 0 <= t < tsteps }'
  body:
    type: expression
    expr:
      type: op
      operation: =
      arguments:
      - type: access
        index: '[tsteps, n] -> { S_11[t] -> t[] }'
        reference: __pet_ref_25
        read: 0
        write: 1
      - type: access
        index: '[tsteps, n] -> { S_11[t] -> [(1 + t)] }'
        reference: __pet_ref_26
        read: 1
        write: 0
- line: -1
  domain: '{ S_12[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[tsteps, n] -> { S_12[] -> t[] }'
        index: '[tsteps, n] -> { S_12[] -> t[] }'
        reference: __pet_ref_27
        kill: 1
- line: -1
  domain: '{ S_13[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[tsteps, n] -> { S_13[] -> i[] }'
        index: '[tsteps, n] -> { S_13[] -> i[] }'
        reference: __pet_ref_28
        kill: 1
- line: -1
  domain: '{ S_14[] }'
  body:
    type: expression
    expr:
      type: op
      operation: kill
      arguments:
      - type: access
        killed: '[tsteps, n] -> { S_14[] -> j[] }'
        index: '[tsteps, n] -> { S_14[] -> j[] }'
        reference: __pet_ref_29
        kill: 1
