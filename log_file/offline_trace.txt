node type: isl_schedule_node_domain
child_num: 1/ curr_stmt: 0/ node_depth: 0
  node type: isl_schedule_node_domain
  child_num: 1/ curr_stmt: 0/ node_depth: 0
    node type: isl_schedule_node_sequence
    child_num: 1/ curr_stmt: 0/ node_depth: 1
      node type: isl_schedule_node_filter
      child_num: 1/ curr_stmt: 2/ node_depth: 2
        node type: isl_schedule_node_band
        child_num: 1/ curr_stmt: 2/ node_depth: 3
        lb: 0 :0 <= i <= ub: ni :1
          node type: isl_schedule_node_band
          child_num: 1/ curr_stmt: 2/ node_depth: 4
          lb: 0 :0 <= j <= ub: nj:2
            node type: isl_schedule_node_sequence
            child_num: 3/ curr_stmt: 2/ node_depth: 5
              node type: isl_schedule_node_filter
              child_num: 1/ curr_stmt: 1/ node_depth: 6
                node type: isl_schedule_node_leaf
                child_num: 1/ curr_stmt: 1/ node_depth: 7
                { S1[i, j] -> tmp[i, j] } : write
              node type: isl_schedule_node_filter
              child_num: 1/ curr_stmt: 2/ node_depth: 6
                node type: isl_schedule_node_band
                child_num: 1/ curr_stmt: 2/ node_depth: 7
                lb: 0 :0 <= k <= ub: nk:3
                  node type: isl_schedule_node_leaf
                  child_num: 5/ curr_stmt: 2/ node_depth: 8
                  { S2[i, j, k] -> A[i, k] } : read
                  { S2[i, j, k] -> alpha[] } : read
                  { S2[i, j, k] -> B[k, j] } : read
                  { S2[i, j, k] -> tmp[i, j] } : read
                  { S2[i, j, k] -> tmp[i, j] } : write
              node type: isl_schedule_node_filter
              child_num: 1/ curr_stmt: 3/ node_depth: 2
                node type: isl_schedule_node_band
                child_num: 1/ curr_stmt: 3/ node_depth: 3
                lb: 0 :0 <= i <= ub: ni :1
                  node type: isl_schedule_node_band
                  child_num: 1/ curr_stmt: 3/ node_depth: 4
                  lb: 0 :0 <= j <= ub: nl:4
                    node type: isl_schedule_node_sequence
                    child_num: 2/ curr_stmt: 3/ node_depth: 5
                      node type: isl_schedule_node_filter
                      child_num: 1/ curr_stmt: 3/ node_depth: 6
                        node type: isl_schedule_node_leaf
                        child_num: 3/ curr_stmt: 3/ node_depth: 7
                        { S3[i, j] -> beta[] } : read
                        { S3[i, j] -> D[i, j] } : read
                        { S3[i, j] -> D[i, j] } : write
                      node type: isl_schedule_node_filter
                      child_num: 1/ curr_stmt: 4/ node_depth: 6
                        node type: isl_schedule_node_band
                        child_num: 1/ curr_stmt: 4/ node_depth: 7
                        lb: 0 :0 <= k <= ub: nj:2
                          node type: isl_schedule_node_leaf
                          child_num: 4/ curr_stmt: 4/ node_depth: 8
                          { S4[i, j, k] -> C[k, j] } : read
                          { S4[i, j, k] -> tmp[i, k] } : read
                          { S4[i, j, k] -> D[i, j] } : read
                          { S4[i, j, k] -> D[i, j] } : write
